    name: Test

    on: [push]

    jobs:
      build:
        name: Test Run
        runs-on: ubuntu-latest
        
        # https://docs.github.com/en/free-pro-team@latest/actions/guides/creating-postgresql-service-containers#introduction
        # Service containers to run with `build`
        services:
          # Label used to access the service container
          postgres:
            # Docker Hub image
            # https://hub.docker.com/_/postgres
            image: postgres
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: postgres
            # Set health checks to wait until postgres has started
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            ports:
              - 5432:5432


        steps:
          - name: createdb test
            run: createdb testtesttest
            env:
              PGHOST: localhost
              PGPORT: 5432
              PGUSER: postgres
              PGPASSWORD: postgres
          - name: Checkout repo code
            uses: actions/checkout@v2
          - name: Install dependencies
            run: npm ci
          - run: npm test
            env:
              CI: true
              PGHOST: localhost
              PGPORT: 5432
              PGUSER: postgres
              PGPASSWORD: postgres

          - name: Upload Unit Test Results
            if: always()
            uses: actions/upload-artifact@v2
            with:
              name: Unit Test Results 
              path: junit.xml
          # - run: npm run test-prettier
          #   env:
          #     CI: true

    # https://github.com/marketplace/actions/publish-unit-test-results
    publish-test-results:
      name: "Publish Unit Tests Results"
      needs: build-and-test
      runs-on: ubuntu-latest
      # the build-and-test job might be skipped, we don't need to run this job then
      if: success() || failure()

      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2
          with:
            path: artifacts

        - name: Publish Unit Test Results
          uses: EnricoMi/publish-unit-test-result-action@v1.4
          with:
            check_name: Unit Test Results
            #github_token: ${{ secrets.GITHUB_TOKEN }}
            files: pytest.xml